;(function(){
    const menuChoise = document.querySelector('#horizontalChoise');
    const itemsChoise = document.querySelectorAll('.choise__item');
    
    const getItemsWidth = (item) => {
        let resultWidth = 400;
        const windowWidth = window.innerWidth;
        const itemWidth = item.offsetWidth;
        const isTablet = window.matchMedia("(max-width: 768px)").matches;
        const isPhone = window.matchMedia("(max-width: 480px)").matches;
    
        if (isTablet){
            resultWidth = windowWidth - itemWidth * itemsChoise.length;
        }
        if (isPhone){
            resultWidth = windowWidth - itemWidth;
        }
        // console.log('getItemsWidth');
        return resultWidth;
    };
    
    const setItemWidth = (item, width) => {
        const itemContent = item.nextElementSibling;
        const itemText = item.firstElementChild;
        itemContent.style.width = `${width}px`;
        itemText.style.width = `${width}px`;
    };
    
    const Item1 = document.getElementsByClassName('choise__item');
    
    for (let i = 0; i < Item1.length; i++) {
        const element = Item1[i];
    
        element.addEventListener('click', function(e){
            for (let index = 0; index < Item1.length; index++) {
                if (index !== i){
                    Item1[index].classList.remove('choise__content--active');
                }            
            }
    
            if (element.classList.contains('choise__content--active')){
                element.classList.remove('choise__content--active');
            } else {
                element.classList.add('choise__content--active');
            };
        });
    };
})();;(function(){
    const hamburger = document.querySelector(".hamburger");
    const menu = document.querySelector('.menu');
    const lock = document.querySelector('body');
    
    hamburger.addEventListener('click', e => {
        if (hamburger.classList.contains('hamburger--active') && menu.classList.contains('menu--active') && lock.classList.contains('lock')) {
            hamburger.classList.remove('hamburger--active');
            menu.classList.remove('menu--active');
            lock.classList.remove('lock');
            console.log('close бургер =|');
    
        } else {
            hamburger.classList.add('hamburger--active');
            menu.classList.add('menu--active');
            lock.classList.add('lock');
            console.log('open бургер =)');
        }
    })
    
    menu.addEventListener('click', e => {
        e.preventDefault();
        hamburger.classList.remove('hamburger--active');
        menu.classList.remove('menu--active');
        lock.classList.remove('lock');
        console.log('close бургер =|');
    })    
})()

;;(function(){
  let myMap;

  const init = () => {
    myMap = new ymaps.Map("map", {
      center: [56.004796, 92.865292],
      zoom: 12,
      controls: [],
    });
  
    let coords = [
      [55.986798, 92.854737],
      [55.994446, 92.797586],
      [55.918994, 92.740482],
      [55.968648, 92.374352],
    ],
      myCollection = new ymaps.GeoObjectCollection({}, {
        draggable: false,
        iconLayout: 'default#image',
        iconImageHref: './image/icons/marker.svg',
        iconImageSize: [46, 57],
        iconImageOffset: [-35, -52]
      });
  
    for (let i = 0; i < coords.length; i++) {
      myCollection.add(new ymaps.Placemark(coords[i]));
    }
  
    myMap.geoObjects.add(myCollection);
  
    myMap.behaviors.disable('scrollZoom');
    myMap.controls.add('zoomControl', {
      size: "large"
    });
  };
  
  ymaps.ready(init);
})()

;;(function(){
    const validateFields = (form, fieldArray) =>{
        fieldArray.forEach((field) => {
            field.removeClass("form__input--error");
            if (field.val().trim() === "") {
                field.addClass("form__input--error");
            }
        });
    
        const errorField = form.find(".form__input--error");
    
        return errorField.length === 0;
    }
    
    $('.form').submit( e => {
        e.preventDefault();
    
        
        const form = $(e.currentTarget);
        const name = form.find("[name='name']");
        const phone = form.find("[name='phone']");
        const comment = form.find("[name='comment']");
        const to = form.find("[name='to']");
    
        const modal =$("#modal");
        const content = modal.find(".modal__content");
    
        const isValid = validateFields(form, [name, phone, comment, to]);
    
        if (isValid){
           const request = $.ajax({
                url: "https://webdev-api.loftschool.com/sendmail",
                method: "post",
        
                data: {
                    name: name.val(),
                    phone: phone.val(),
                    comment: comment.val(),
                    to: to.val()
                },
    
                // success: data =>{
                    
                // },
    
                // error: data =>{
                    
                // }
            }); 
    
            request.done(data =>{
                console.log(data);
                    content.text(data.message)
                    
                $.fancybox.open({
                    src: "#modal",
                    type: "inline"
                });
            });
    
            request.fail(data=>{
                const message = data.responseJSON.message;
                content.text(message);
                console.log(data);
    
                $.fancybox.open({
                    src: "#modal",
                    type: "inline"
                });
            });
            
            // request.always(()=>{
            //     $.fancybox.open({
            //         src: "#modal",
            //         type: "inline"
            //     }); 
            // })
        }
    
        // $.ajax({
        //     url: "https://webdev-api.loftschool.com/sendmail",
        //     method: "post",
    
        //     data: {
        //         name: name.val(),
        //         phone: phone.val(),
        //         comment: phone.val(),
        //         to: to.val()
        //     }
        // }); 
    
        // $.fancybox.open({
        //     src: "#modal",
        //     type: "inline"
        // });
    });
    
    
    
    $('.app-modal-close').click(e =>{
        e.preventDefault();
    
        $.fancybox.close();
    });
})()

;const sections = $('section');
const display = $('.maincontent');
const sideMenu = $('.fixed-menu');
const menuItems = sideMenu.find('.fixed-menu__item');

const mobileDetect = new MobileDetect(window.navigator.userAgent);
const isMobile = mobileDetect.mobile();

let inScroll = false;

sections.first().addClass('active');

const counSectionPosition = sectionEq => {
    const position = sectionEq * -100;

    if (isNaN(position)){
        console.error("передано не верное значение в counSectionPosition");
        return 0;
    };

    return position;
};

const resetActiveClassForItem = (items, itemEq, activeClass) => {
    items.eq(itemEq).addClass(activeClass).siblings().removeClass(activeClass);
};

const performTransition = sectionEq => {
    if (inScroll) return
    const transitionOver = 1000;
    const mouseInertiaOver = 300;

    inScroll = true;

    const position = counSectionPosition(sectionEq);

    display.css({
        transform: `translateY(${position}%)`,
    });

    resetActiveClassForItem(sections, sectionEq, 'active');

    setTimeout(() =>{
        inScroll= false;

        resetActiveClassForItem(menuItems, sectionEq, 'fixed-menu__item--active'); 
    }, transitionOver + mouseInertiaOver);
    
};

const vieportScroller = () => {
const activeSection = sections.filter(".active");
const nextSection = activeSection.next();
const prevSection = activeSection.prev();

    return {
        next (){
            if (nextSection.length) {
                performTransition(nextSection.index());
            }
        },

        prev(){
            if (prevSection.length) {
                performTransition(prevSection.index());
            }
        }
    }    
}

$(window).on('wheel', e =>{
    const deltaY = e.originalEvent.deltaY;
    const scroller = vieportScroller();

    if (deltaY > 0){
        scroller.next();
        // scrollVieport('next');
    }
    if (deltaY < 0){
        scroller.prev();
        // scrollVieport('prev');
    }
    console.log(deltaY);
});

$(window).on("keydown", (e)=>{
    const tagName = e.target.tagName.toLowerCase();
    const userTypingInputs = tagName == "input" || tagName == "textarea";
    const scroller = vieportScroller();
    
    if (userTypingInputs) return;
    
    switch(e.keyCode){
        case 38:
            scroller.prev();;
            break;
        case 40:
            scroller.next();;
            break;
    };
});

$("[data-scroll-to]").click(e =>{
    e.preventDefault();

    const $this = $(e.currentTarget);
    const target = $this.attr('data-scroll-to');
    const reqSection = $(`[data-section-id=${[target]}]`);

    performTransition(reqSection.index());
});

if (isMobile){
    //https://github.com/mattbryson/TouchSwipe-Jquery-Plugin
    $("body").swipe ({
        swipe: function(event, direction) {
            const scroller = vieportScroller();
            let scrollDirection = "";

            if (direction === "up") scrollDirection = "next";
            if (direction === "down") scrollDirection = "prev";
            
            if (scrollDirection) {
                scroller[scrollDirection]();
            }
        }
    });   
}

;;(function(){
// большая кнопка воспроизведения
const playBtn = document.querySelector(".video__player-img");
// маленькая кнопка восроизведения
const playerPlayBrn = document.querySelector(".duration__img");
// само видео
const video = document.getElementById("player");
// input с помощью которого выставляется время воспроизведения
const durationControl = document.getElementById("durationLevel");
// input с помощью которого выставляется громкость
const soundControl = document.getElementById("micLevel");
// обёртка управления громкостью
const soundBtn = document.getElementById("soundBtn");
// кнопка с динамиком, с помощью которой мы будем включить или выключать громкость 
const dynamicBtn = document.getElementById('dynamic');
// идентификатор интервала, который будет отрисовывать текущее время воспроизведения
let intervalId;
// переменная для сохранения уровня громкости перед выключением звука
let soundLevel;

// отслеживаем загрузку медифайлов страницы
window.addEventListener('load', function() {
  // при клике на само видео выполняем функцию playStop
  video.addEventListener("click", playStop);
   // находим все кнопки управления play/pause
  let playButtons = document.querySelectorAll(".play");
  
  for (let i = 0; i < playButtons.length; i++) {
    // при клике на эти кнопки выполняем функцию playStop
    playButtons[i].addEventListener("click", playStop);
  }

  // выставляем минимальное значение ползунка времени воспроизведения
  durationControl.min = 0;
  // выставляем время воспроизведения в ноль
  durationControl.value = 0;
  // выставляем максимальное значение ползунка времени воспроизведения по длительности видео
  durationControl.max = video.duration;
  // при кликах или перетягивании ползунка выполняем функцию setVideoDuration
  durationControl.addEventListener("input", setVideoDuration);

  // выставляем минимальное значение ползунка громкости
  soundControl.min = 0;
  // выставляем максимальное значение ползунка громкости
  soundControl.max = 10;
  // выставляем текущее положение ползунка громкости на максимум
  soundControl.value = soundControl.min;
  // при кликах или перетягивании ползунка выполняем функцию changeSoundVolume
  soundControl.addEventListener("input", changeSoundVolume);

  // при клике на динамик выполняем soundOf
  dynamicBtn.addEventListener('click', soundOf);

  // когда видео закончится
  video.addEventListener('ended', () => {
      // выставляем классы на кнопки, чтоб отобразить, что можно воспроизводить снова
      playBtn.classList.toggle('video__player-img--active');
      playerPlayBrn.classList.remove('active');
      // устанавливаем время воспроизведения в ноль
      video.currentTime = 0;
  })
});

// функция воспроизводить/поставить на паузу
function playStop() {
  // устанавливаем активные классы на элементы чтоб показать воспроизводится сейчас видео или нет
  playBtn.classList.toggle("video__player-img--active");
  playerPlayBrn.classList.toggle("active");

  // если видео на паузе
  if (video.paused) {
    // запускаем его
    video.play();
    // запускаем отрисовку ползунка времени воспроизведения
    intervalId = setInterval(updateDuration, 1000 / 60);
  // если видео не на паузе
  } else {
    // останавливаем отрисовку ползунка времени воспроизведения
    clearInterval(intervalId);
    // ставим видео на паузу
    video.pause();
  }
}

// функция установить текущее время воспроизведения
function setVideoDuration() {
  // установливает текущее время воспроизведения видео по позиции ползунка
  video.currentTime = durationControl.value;
  // отрисовывает полосу прогресса
  updateDuration();
}

/*
  Функция для обновления позиции ползунка продолжительности видео.   
*/
function updateDuration() {
  // устанавливаем в наш инпут текущее время
  durationControl.value = video.currentTime;
  // рассчитываем процент для закраски прогресса
  let step = video.duration / 100; // 121 / 100 = 1.21
  let percent = video.currentTime / step; // 60 / 1.21
  // устанавливаем стили
  durationControl.style.background = `linear-gradient(90deg, #FEDB3F 0%, #FEDB3F ${percent}%, #626262 ${percent}%)`;
}

// функция изменения уровня громкости
function changeSoundVolume() {
  // видео принимает только значения от 0 до 1, то есть дробные числа
  // поэтому текущее значение ползунка громкости делим на 10
  video.volume = soundControl.value / 10; // 0.1 0.8...
  // если мы выставили ползунок в ноль
  if (video.volume === 0) {
    // то отображаем на динамике что звук выключен
    soundBtn.classList.add("active");
  // если звук не выключен, то снимаем отображение выключенного звука с икноки динамика
  } else {
    soundBtn.classList.remove("active");
  }
}

// функция включения/выключения звука
function soundOf() {
  // если при запуске функции звук выключен
  if (video.volume === 0) {
      // мы берем предыдущее сохраненное значение громкости и выставляем в видео
      video.volume = soundLevel;
      // отрисовываем это в ползунок громкости
      soundControl.value = soundLevel * 10;
      // убираем отображение выключенного звука с иконки динамика
      soundBtn.classList.remove('active');
  // если при запуске функции звук включен
  } else {
    // сохраняем текущее значение громкости
    soundLevel = video.volume;
    // выставляем громкость в ноль
    video.volume = 0;
    // отрисовываем это на ползунке громкости
    soundControl.value = 0;
    // отображаем на иконке динамика, что звук выключен
    soundBtn.classList.add('active');
  }
}
})();;(function(){
    const itemRecall = document.querySelectorAll('.reviews__item');
    const itemUser = document.querySelectorAll('.reviews-users__item');
    
    itemUser.forEach(function (item) {
        item.addEventListener('click', function(){
            let currentBtn = item;
            let currentId = currentBtn.getAttribute("data-open");
            let currentTab = document.querySelector(currentId);
    
            if(!currentBtn.classList.contains('interactive__avatar--active')) {
                itemUser.forEach(function(item){
                    item.classList.remove('interactive__avatar--active')
                });
        
                itemRecall.forEach(function(item){
                    item.classList.remove('reviews__item--showing');
                });
        
                currentBtn.classList.add('interactive__avatar--active');
                currentTab.classList.add('reviews__item--showing');
            } 
        });
    });
})();;(function(){
    const sliderShop = $('.shop__list').bxSlider({
        pager: false,
        controls: false
    });
    
    $('.slider__shop-left').click((e) =>{
        e.preventDefault();
    
        sliderShop.goToPrevSlide();
    })
    $('.slider__shop-right').click((e)=>{
        e.preventDefault();
    
        sliderShop.goToNextSlide();
    })
})();;(function(){
    const teamName = document.querySelectorAll('.team__name');
    const teamDesc = document.querySelectorAll('.team__desc');
    
    function closeEveryItems(){
        for (let i = 0; i < teamName.length; i++) {
            const button = teamName[i];
    
            const desc = button.nextElementSibling;
            desc.classList.remove('team__desc--active');
            button.classList.remove('team__name--active');        
        }
    }
    
    for (let index = 0; index < teamName.length; index++) {
        const button = teamName[index];
        button.addEventListener('click', function(event) {   
    
            if (teamName[index].classList.contains('team__name--active') && teamDesc[index].classList.contains('team__desc--active')) {
                closeEveryItems()
            } else {
                closeEveryItems()
                teamDesc[index].classList.add('team__desc--active');
                teamName[index].classList.add('team__name--active');
            }
        });
    }
})()

//# sourceMappingURL=data:application/json;charset=utf8;base64,
